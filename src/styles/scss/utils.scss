$rem-base: 16px;

@function px-to-rem($list) {
  $result: ();

  @each $value in $list {
    $result: append($result, (($value / $rem-base) * 1rem));
  }

  @return #{$result};
}

@mixin set-font-and-line($font, $line, $font-weight: normal, $text-transform: none) {
  font-size: px-to-rem($font);
  line-height: px-to-rem($line);
  font-weight: $font-weight;
  text-transform: $text-transform;
}

@mixin set-banner($height, $image) {
  min-height: $height;
  background: url("../images/#{$image}") no-repeat center;
  background-size: cover;
  color: $white;

  padding-top: px-to-rem(50px);

  @media (max-width: 768px) {
    padding-top: px-to-rem(100px);
  }

  @media (max-width: 425px) {
    padding-top: px-to-rem(200px);
  }

  .content {
    flex: 1 1;
    margin-top: px-to-rem(50px);
  }

  p {
    @include set-font-and-line(18px, 21px, bold);

    @media (max-width: 425px) {
      @include set-font-and-line(12px, 14px, bold);
    }
  }
}

@mixin set-background-sub($class, $png) {
  .#{$class} {
    background: url("../images/#{$png}") no-repeat center;
    background-size: cover;
  }
}

@mixin set-box(
  $left,
  $bottom,
  $item-size,
  $media-left,
  $media-bottom,
  $media-item-size,
) {
  margin-left: px-to-rem(-$left);
  margin-bottom: px-to-rem(-$bottom);

  & > * {
    flex: 1 1 px-to-rem($item-size);
    margin-bottom: px-to-rem($bottom);
    margin-left: px-to-rem($left);
  }

  @media (max-width: 500px) {
    margin-left: px-to-rem(-$media-left);
    margin-bottom: px-to-rem(-$media-bottom);

    & > * {
      flex: 1 1 px-to-rem($media-item-size);
      margin-left: px-to-rem($media-left);
      margin-bottom: px-to-rem($media-bottom);
    }
  }
}
