$rem-base: 16px;

@function px-to-rem($list) {
  $result: ();

  @each $value in $list {
    $result: append($result, (($value / $rem-base) * 1rem));
  }

  @return #{$result};
}

@mixin set-font-and-line($font, $line, $font-weight: normal, $text-transform: none) {
  font-size: px-to-rem($font);
  line-height: px-to-rem($line);
  font-weight: $font-weight;
  text-transform: $text-transform;
}

@mixin set-banner($height, $image) {
  min-height: $height;
  background: url("../images/#{$image}") no-repeat center;
  background-size: cover;
  color: $white;

  padding: px-to-rem(150px 0px 100px);

  @media (max-width: 425px) {
    padding-top: px-to-rem(250px);
  }

  p {
    @include set-font-and-line(18px, 21px, bold);

    @media (max-width: 425px) {
      @include set-font-and-line(12px, 14px, bold);
    }
  }
}

@mixin set-background-sub($class, $png) {
  .#{$class} {
    background: url("../images/#{$png}.png") no-repeat center;
    background-size: cover;
  }
}

@mixin set-backround-button($name, $color) {
  .#{$name} {
    &::before {
      background-image: url('../images/#{$name}.svg');
    }
    background: $color;
  }
}

@mixin set-box($x, $y, $item-size) {
  margin-left: px-to-rem(-$x);
  margin-bottom: px-to-rem(-$y);

  & > * {
    flex: 1 1 $item-size;
    margin-left: px-to-rem($x);
    margin-bottom: px-to-rem($y);
  }
}

@mixin set-media-box($x, $y, $item-size) {
  @media (max-width: 500px) {
    @include set-box($x, $y, $item-size)
  }
}

